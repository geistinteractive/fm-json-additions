/**
 * 
 * returns list containing only the values at that path
 *
 * @param {array} array a valid JSON Array of objects
 * @param {path} the path to the property you want to list
 *
 * @module fm-json-additions
 * @see https://github.com/geistinteractive/fm-json-additions
 * 
 * @history 2018-08-15, eshagdar, NYHTC
 * - Improved test for result of getting JSON element ( still not perfect, but better ).
 * - Use If ( instead of Case ) for binary test.
 * - Updated param documentation.
 * @history 2017-05-16, john@e-rwu.com, fixes gh #5, #4
 * @history 2017-04-01, todd@geistinteractive.com, created
 *
 * =====================================
 */


Let ( [
		notValid = Left ( JSONFormatElements ( array ) ; 1 ) = "?" ;
		numObj = ValueCount ( JSONListValues ( array ; "" ) ) ;
		
		thisItem = JSONGetElement ( array ; numObj - 1 ) ;
		newArray = JSONDeleteElement ( array ; numObj - 1 ) ;
		prop = JSONGetElement ( thisItem ; path ) ;
		prop = If ( Left ( prop ; 26 ) = "? in Json::Value::operator" ; ""; prop )
	];
	
	If ( numObj < 1 or notValid ; 
		"" ;
		List ( 
			JSON.GetValuesAtPath ( newArray ; path ) ; 
			prop 
		)
	)
)